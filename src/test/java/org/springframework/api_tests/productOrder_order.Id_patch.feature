# ********RoostGPT********

# Test generated by RoostGPT for test karateTest-product using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /productOrder/{order.Id}_patch for http method type PATCH 
# RoostTestHash=a40197b7fc
# 
# 

# ********RoostGPT********
Feature: Testing Product Order API

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase

  Scenario Outline: Testing PATCH method on /productOrder/{order.Id}
    Given path 'productOrder', orderId
    And request
      """
      {
        "order": "#(order)",
        "order.correlationOrder": "#(orderCorrelationOrder)",
        "order.associatedDocument": "#(orderAssociatedDocument)",
        "order.associatedDocumentDate": "#(orderAssociatedDocumentDate)",
        "order.type": "#(orderType)",
        "order.infraType": "#(orderInfraType)",
        "order.orderItem": "#(orderItem)",
        "order.task": {
          "description": "#(taskDescription)",
          "updateDate": "#(taskUpdateDate)",
          "action": "#(taskAction)"
        }
      }
      """
    When method patch
    Then status <statusCode>
    And match response == { "type": '#(type)', "message": '#string', "code": '#string' }

    Examples:
      | read('productOrder_order.Id_patch.csv') |
