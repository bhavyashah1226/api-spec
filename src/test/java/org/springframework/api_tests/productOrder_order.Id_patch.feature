# ********RoostGPT********

# Test generated by RoostGPT for test karateTest-product using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /productOrder/{order.Id}_patch for http method type PATCH 
# RoostTestHash=a40197b7fc
# 
# 

# ********RoostGPT********
Feature: Testing Product Order API

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def AUTH_TOKEN = karate.properties['AUTH_TOKEN']
    * configure headers = { Authorization: '#(AUTH_TOKEN)' }

  Scenario Outline: Test PATCH /productOrder/{order.Id} endpoint with valid request
    Given path 'productOrder', '<order.Id>'
    And request
      """
      {
        "order": "#(order)",
        "order.correlationOrder": "#(order.correlationOrder)",
        "order.associatedDocument": "#(order.associatedDocument)",
        "order.associatedDocumentDate": "#(order.associatedDocumentDate)",
        "order.type": "#(order.type)",
        "order.infraType": "#(order.infraType)",
        "order.orderItem": "#(order.orderItem)",
        "order.task": {
          "description": "#(order.task.description)",
          "updateDate": "#(order.task.updateDate)",
          "action": "#(order.task.action)"
        }
      }
      """
    When method patch
    Then status <status>
    And match response == { type: '#string', message: '#string', code: '#string' }

    Examples:
      | read('productOrder_order.Id_patch.csv') |
