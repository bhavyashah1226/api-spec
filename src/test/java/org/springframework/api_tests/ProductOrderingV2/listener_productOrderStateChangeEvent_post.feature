# ********RoostGPT********

# Test generated by RoostGPT for test karateTest-product using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /listener/productOrderStateChangeEvent_post for http method type POST 
# RoostTestHash=2a8518ba6f
# 
# 

# ********RoostGPT********
Feature: Product Order State Change Event Listener

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']
    * configure headers = { 'Authorization': '#(authToken)' }

  Scenario Outline: Verify the API endpoint with different payloads
    Given path '/listener/productOrderStateChangeEvent'
    And request """
    <payload>
    """
    When method post
    Then status <status_code>

    Examples:
      | payload                                                                | status_code |
      | read('classpath:examples/ClosingNotification.json')                    |         204 |
      | read('classpath:examples/CancelNotification.json')                     |         204 |
      | read('classpath:examples/ONTalreadyInUse.json')                        |         204 |
      | read('classpath:examples/ClosingNotificationOntOwnerVtalInstall.json') |         204 |

  Scenario: Verify the API endpoint with invalid authorization
    Given path '/listener/productOrderStateChangeEvent'
    And request read('classpath:examples/ClosingNotification.json')
    And configure headers = { 'Authorization': 'Invalid_Token' }
    When method post
    Then status 401

  Scenario: Verify the API endpoint with missing authorization
    Given path '/listener/productOrderStateChangeEvent'
    And request read('classpath:examples/ClosingNotification.json')
    And configure headers = { }
    When method post
    Then status 401
