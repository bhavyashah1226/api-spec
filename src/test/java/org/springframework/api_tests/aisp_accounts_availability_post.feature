# ********RoostGPT********

# Test generated by RoostGPT for test HSBC-HK-Market-Api-Spec using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /aisp/accounts/availability_post for http method type POST 
# RoostTestHash=71c7c56f2c
# 
# 

# ********RoostGPT********
Feature: Testing account availability endpoint

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']
    * def headers = { 
      'Authorization': '#(authToken)', 
      'Content-Type': 'application/json', 
      'x-fapi-auth-date': 'Sun, 10 Sep 2017 19:43:31 UTC', 
      'x-fapi-customer-ip-address': '169.254.169.254', 
      'x-fapi-interaction-id': 'unique-id', 
      'Accept-Language': 'en-HK'
    }

  Scenario Outline: Verify the response when valid input is supplied
    Given path '/aisp/accounts/availability'
    * headers headers
    * request <requestBody>
    When method post
    Then status 200
    And match response == <expectedResponseBody>

    Examples:
      | requestBody                                                                                                                                                                                  | expectedResponseBody                                                                                                                                            |
      | { "data": [ { "paramName": "accountType", "paramValue": "Personal" } ] }                                                                                                                     | { "data": [ { "paramName" : "accountType", "status" : "Yes" } ] }                                                                                               |
      | { "data": [ { "paramName": "accountType", "paramValue": "" } ] }                                                                                                                             | { "data": [ { "paramName" : "accountType", "status" : "No" } ] }                                                                                                |
      | { "data": [ { "paramName": "accountType", "paramValue": "incorrectType" } ] }                                                                                                                | { "data": [ { "paramName" : "accountType", "status" : "Error" } ] }                                                                                             |
      | { "data": [ { "paramName": "accountType", "paramValue": "Personal", "paramName": "phoneNumber", "paramValue": "1234567890" }, { "paramName": "email", "paramValue": "email@example.com"} ] } | { "data": [ { "paramName" : "accountType", "status" : "Yes" }, { "paramName" : "phoneNumber", "status" : "Yes"}, { "paramName" : "email", "status" : "Yes"} ] } |

  Scenario Outline: Verify response when an unauthorized request is made
    Given path '/aisp/accounts/availability'
    * request <requestBody>
    When method post
    Then status 401

    Examples:
      | requestBody                                                              |
      | { "data": [ { "paramName": "accountType", "paramValue": "Personal" } ] } |
      | { "data": [ { "paramName": "accountType", "paramValue": "" } ] }         |

