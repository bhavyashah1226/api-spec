# ********RoostGPT********

# Test generated by RoostGPT for test karateTest-product using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /listener/serviceTestResultEvent_post for http method type POST 
# RoostTestHash=5f2c54c9f8
# 
# 

# ********RoostGPT********
Feature: Listener Service Test Result Event API

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase

  Scenario Outline: Test Listener Service Test Result Event API
    Given path '/listener/serviceTestResultEvent'
    And request '''
    { "notification": #(notification) }
    '''
    When method post
    Then match responseStatus == <statusCode>
    And match responseHeaders == <responseHeaders>
    And match responseBody == <responseBody>

    Examples:
      | notification                                                                                                                                                                                                           | statusCode | responseHeaders | responseBody |
      | { 'customer': { 'subscriberId': '1234' }, 'serviceTest': { 'id': '1', 'type': 'type1', 'startDate': '2021-01-01', 'endDate': '2021-01-02', 'state': 'state1', 'diagnostic': {}, 'hintOperations': {}, 'result': {} } } |        204 | {}              | {}           |
      | { 'customer': { 'subscriberId': '1234' }, 'serviceTest': { 'id': '1', 'type': 'type1', 'startDate': '2021-01-01', 'endDate': '2021-01-02', 'state': 'state1', 'diagnostic': {}, 'hintOperations': {}, 'result': {} } } |        400 | {}              | {}           |
      | { 'customer': { 'subscriberId': '1234' }, 'serviceTest': { 'id': '1', 'type': 'type1', 'startDate': '2021-01-01', 'endDate': '2021-01-02', 'state': 'state1', 'diagnostic': {}, 'hintOperations': {}, 'result': {} } } |        401 | {}              | {}           |
      | { 'customer': { 'subscriberId': '1234' }, 'serviceTest': { 'id': '1', 'type': 'type1', 'startDate': '2021-01-01', 'endDate': '2021-01-02', 'state': 'state1', 'diagnostic': {}, 'hintOperations': {}, 'result': {} } } |        500 | {}              | {}           |
      | { 'customer': { 'subscriberId': '1234' }, 'serviceTest': { 'id': '1', 'type': 'type1', 'startDate': '2021-01-01', 'endDate': '2021-01-02', 'state': 'state1', 'diagnostic': {}, 'hintOperations': {}, 'result': {} } } |        503 | {}              | {}           |
      | { 'customer': { 'subscriberId': '1234' }, 'serviceTest': { 'id': '1', 'type': 'type1', 'startDate': '2021-01-01', 'endDate': '2021-01-02', 'state': 'state1', 'diagnostic': {}, 'hintOperations': {}, 'result': {} } } |        504 | {}              | {}           |
